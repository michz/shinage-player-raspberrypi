IMG_NAME=shinageplayer
# required (Default: unset)
# The name of the image to build with the current stage directories. Setting IMG_NAME=Raspbian is logical for an unmodified RPi-Distro/pi-gen build, but you should use something else for a customized version. Export files in stages may add suffixes to IMG_NAME.

#RELEASE=buster
# (Default: buster)
# The release version to build images against. Valid values are jessie, stretch buster, bullseye, and testing.

#APT_PROXY (Default: unset)
# If you require the use of an apt proxy, set it here. This proxy setting will not be included in the image, making it safe to use an apt-cacher or similar package for development.
# If you have Docker installed, you can set up a local apt caching proxy to like speed up subsequent builds like this:
#
#docker-compose up -d
#echo 'APT_PROXY=http://172.17.0.1:3142' >> config

#BASE_DIR
# (Default: location of build.sh)
# CAUTION: Currently, changing this value will probably break build.sh
# Top-level directory for pi-gen. Contains stage directories, build scripts, and by default both work and deployment directories.

#WORK_DIR
# (Default: "$BASE_DIR/work")
# Directory in which pi-gen builds the target system. This value can be changed if you have a suitably large, fast storage location for stages to be built and cached. Note, WORK_DIR stores a complete copy of the target system for each build stage, amounting to tens of gigabytes in the case of Raspbian.
# CAUTION: If your working directory is on an NTFS partition you probably won't be able to build: make sure this is a proper Linux filesystem.

#DEPLOY_DIR
# (Default: "$BASE_DIR/deploy")
# Output directory for target system images and NOOBS bundles.

#DEPLOY_ZIP=1
# (Default: 1)
# Setting to 0 will deploy the actual image (.img) instead of a zipped image (.zip).

#USE_QEMU=0
# (Default: "0")
# Setting to '1' enables the QEMU mode - creating an image that can be mounted via QEMU for an emulated environment. These images include "-qemu" in the image file name.

LOCALE_DEFAULT="de_DE.UTF-8"
# (Default: "en_GB.UTF-8" )
# Default system locale.

TARGET_HOSTNAME=shinageplayer
# (Default: "raspberrypi" )
# Setting the hostname to the specified value.

KEYBOARD_KEYMAP="de"
# (Default: "gb" )
# Default keyboard keymap.
# To get the current value from a running system, run debconf-show keyboard-configuration and look at the keyboard-configuration/xkb-keymap value.

# KEYBOARD_LAYOUT="German - German (no dead keys)"
# (Default: "English (UK)" )
# Default keyboard layout.
# To get the current value from a running system, run debconf-show keyboard-configuration and look at the keyboard-configuration/variant value.

TIMEZONE_DEFAULT="Europe/Berlin"
# (Default: "Europe/London" )
# Default timezone
# To get the current value from a running system, look in /etc/timezone.

FIRST_USER_NAME="shinage"
# (Default: "pi" )
# Username for the first user

FIRST_USER_PASS="shinage"
# (Default: "raspberry")
# Password for the first user

#WPA_ESSID, WPA_PASSWORD and WPA_COUNTRY (Default: unset)
# If these are set, they are use to configure wpa_supplicant.conf, so that the Raspberry Pi can automatically connect to a wireless network on first boot. If WPA_ESSID is set and WPA_PASSWORD is unset an unprotected wireless network will be configured. If set, WPA_PASSWORD must be between 8 and 63 characters.

ENABLE_SSH=1
# (Default: 0)
# Setting to 1 will enable ssh server for remote log in. Note that if you are using a common password such as the defaults there is a high risk of attackers taking over you Raspberry Pi.

# PUBKEY_SSH_FIRST_USER
# (Default: unset)
# Setting this to a value will make that value the contents of the FIRST_USER_NAME's ~/.ssh/authorized_keys. Obviously the value should therefore be a valid authorized_keys file. Note that this does not automatically enable SSH.

# PUBKEY_ONLY_SSH
# (Default: 0)
# Setting to 1 will disable password authentication for SSH and enable public key authentication. Note that if SSH is not enabled this will take effect when SSH becomes enabled.

STAGE_LIST="stage0 stage1 stage2 stage_shinage"
#STAGE_LIST="stage0 stage1 stage2 ../stage_shinage"
# (Default: stage*)
# If set, then instead of working through the numeric stages in order, this list will be followed. For example setting to "stage0 stage1 mystage stage2" will run the contents of mystage before stage2. Note that quotes are needed around the list. An absolute or relative path can be given for stages outside the pi-gen directory.
